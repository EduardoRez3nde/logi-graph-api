plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.learning'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-neo4j'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation("org.locationtech.jts:jts-core:1.19.0")
	implementation("org.hibernate.orm:hibernate-spatial")
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation("ai.timefold.solver:timefold-solver-spring-boot-starter:1.11.0")
	implementation("org.flywaydb:flyway-core:11.11.0")
	implementation("ai.timefold.solver:timefold-solver-spring-boot-starter:1.24.0")
	implementation 'eu.michael-simons.neo4j:neo4j-migrations-spring-boot-starter:2.0.3'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'


	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	runtimeOnly("org.flywaydb:flyway-database-postgresql:11.11.0")
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	runtimeOnly 'com.h2database:h2'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
}

tasks.named('test') {
	useJUnitPlatform()
}
